{"version":3,"sources":["components/LiveStocks/index.js","App.js","reportWebVitals.js","index.js"],"names":["months","days","LiveStocks","props","calculatedObj","useState","calObj","setCalObj","useEffect","beautifyObj","data","map","el","push","Set","item","ticker","xs","key","console","log","reduce","rv","x","sort","a","b","parseFloat","price","itm","getCurrentTime","d","Date","day","getDay","hr","getHours","min","getMinutes","ampm","getDate","getMonth","getFullYear","Fragment","className","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","index","status","toUpperCase","length","App","WebSocket","ws","stockData","setStockData","onopen","onmessage","evt","message","JSON","parse","onclose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1cb4c95.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nvar months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\nvar days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nconst LiveStocks = (props) => {\r\n    let calculatedObj = [];\r\n    const [calObj, setCalObj] = useState([]);\r\n    useEffect(() => {\r\n        let beautifyObj = [];\r\n        props.data.map((el) => {\r\n            beautifyObj.push({\r\n                'ticker': el[0],\r\n                'price': el[1]\r\n            })\r\n        });\r\n        var groupBy = function (xs, key) {\r\n            return xs.reduce(function (rv, x) {\r\n                (rv[x[key]] = rv[x[key]] || []).push(x);\r\n                return rv;\r\n            }, {});\r\n        };\r\n        // .sort((a, b) => parseFloat(a.price) - parseFloat(b.price))\r\n        // console.log('sort...', groupBy(beautifyObj, 'ticker'));\r\n        const unique = [...new Set(beautifyObj.map(item => item.ticker))];\r\n        // console.log('unique', unique);\r\n        unique.map((el) =>{\r\n            console.log('sort pls',groupBy(beautifyObj, 'ticker')[el].sort((a, b) => parseFloat(a.price) - parseFloat(b.price)));\r\n        });\r\n        beautifyObj.map((el) => {\r\n            debugger\r\n            props.data.map((itm) => {\r\n                if (itm[0] === el.ticker) {\r\n                    if (itm[1] > el.price) {\r\n                        calculatedObj.push({\r\n                            'ticker': itm[0],\r\n                            'price': itm[1],\r\n                            'status': 'inc'\r\n                        })\r\n                    } else if (itm[1] < el.price) {\r\n                        calculatedObj.push({\r\n                            'ticker': itm[0],\r\n                            'price': itm[1],\r\n                            'status': 'dec'\r\n                        })\r\n                    } else {\r\n                        calculatedObj.push({\r\n                            'ticker': itm[0],\r\n                            'price': itm[1],\r\n                            'status': 'nor'\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        });\r\n        setCalObj(calculatedObj)\r\n        // console.log('calculatedObj --->', calculatedObj);\r\n        // console.log('Beautify --->', beautifyObj);\r\n    }, [props]);\r\n\r\n    const getCurrentTime = () => {\r\n        var d = new Date();\r\n        var day = days[d.getDay()];\r\n        var hr = d.getHours();\r\n        var min = d.getMinutes();\r\n        if (min < 10) {\r\n            min = \"0\" + min;\r\n        }\r\n        var ampm = \"am\";\r\n        if (hr > 12) {\r\n            hr -= 12;\r\n            ampm = \"pm\";\r\n        }\r\n        var date = d.getDate();\r\n        var month = months[d.getMonth()];\r\n        var year = d.getFullYear();\r\n        return day + \" \" + hr + \":\" + min + ampm + \" \" + date + \" \" + month + \" \" + year;\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {/* <h4>{props.data}</h4> */}\r\n            <div className=\"antialiased font-sans\">\r\n                <div className=\"container mx-auto px-4 sm:px-8\">\r\n                    <div className=\"py-8\">\r\n                        <div>\r\n                            <h2 className=\"text-2xl text-white font-semibold leading-tight\">\r\n                                <div className='flex items-center'>\r\n                                    <div className='mr-1'>\r\n                                        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" /></svg>\r\n                                    </div>\r\n                                    <div>\r\n                                        <h2 className=\"text-2xl text-white font-semibold leading-tight\">Live <span className='text-yellow-600'> Stocks </span> Update</h2>\r\n                                    </div>\r\n                                </div>\r\n                            </h2>\r\n                        </div>\r\n                        <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\r\n                            <div className=\"inline-block min-w-full shadow rounded-sm overflow-hidden\">\r\n                                <table className=\"min-w-full leading-normal \">\r\n                                    <thead className='bg-white'>\r\n                                        <tr>\r\n                                            <th\r\n                                                className=\"px-5 py-3 border-b-2 border-gray-200 text-left text-xs font-bold text-gray-600 uppercase tracking-wider\">\r\n                                                <div className='flex items-center'>\r\n                                                    <div className='mr-1'>\r\n                                                        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z\" /></svg>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        ticker\r\n                                                </div>\r\n                                                </div>\r\n\r\n                                            </th>\r\n                                            <th\r\n                                                className=\"px-5 py-3 border-b-2 border-gray-200 text-left text-xs font-bold text-gray-600 uppercase tracking-wider\">\r\n                                                <div className='flex items-center'>\r\n                                                    <div className='mr-1'>\r\n                                                        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 8h6m-5 0a3 3 0 110 6H9l3 3m-3-6h6m6 1a9 9 0 11-18 0 9 9 0 0118 0z\" /></svg>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        Price\r\n                                                </div>\r\n                                                </div>\r\n\r\n\r\n                                            </th>\r\n                                            <th\r\n                                                className=\"px-5 py-3 border-b-2 border-gray-200 text-left text-xs font-bold text-gray-600 uppercase tracking-wider\">\r\n                                                <div className='flex items-center'>\r\n                                                    <div className='mr-1'>\r\n                                                        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" /></svg>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        Last Updated\r\n                                                </div>\r\n                                                </div>\r\n\r\n                                            </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            calObj.map((el, index) => {\r\n                                                return (\r\n                                                    <tr key={index} className={el.status == 'inc' ? 'bg-green-300' : el.status == 'dec' ? 'bg-red-300' : 'bg-gray-200 border-b-2 border-gray-300'}>\r\n                                                        <td className=\"w-64 px-5 py-5 border-b border-gray-200 text-sm\">\r\n                                                            <div className=\"flex items-center\">\r\n                                                                <p className=\"text-blue-900 font-bold whitespace-no-wrap\">{el.ticker.toUpperCase()}</p>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className={el.status == 'inc' ? 'w-64 px-5 py-5 border-b text-sm' : el.status == 'dec' ? 'w-64 px-5 py-5 border-b   text-sm' : 'w-64 px-5 py-5 border-b text-sm'}>\r\n                                                            <div className=\"flex items-center text-gray-900 font-semibold whitespace-no-wrap\">\r\n                                                                <div className='mr-2'>\r\n                                                                    {\r\n                                                                        el.status == 'inc' ?\r\n                                                                            <svg className=\"w-6 h-6 text-green-900\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" /></svg>\r\n                                                                            :\r\n                                                                            el.status == 'dec' ?\r\n                                                                                <svg className=\"w-6 h-6 text-red-900\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 17h8m0 0V9m0 8l-8-8-4 4-6-6\" /></svg>\r\n                                                                                :\r\n                                                                                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\" /></svg>\r\n                                                                    }\r\n                                                                </div>\r\n                                                                <div className='font-bold text-blue-600'>\r\n                                                                    {el.price}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\" px-5 py-5 border-b border-gray-200 text-sm\">\r\n                                                            <p className=\"text-gray-900 font-semibold whitespace-no-wrap\">\r\n                                                                {getCurrentTime()}\r\n                                                            </p>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                                <div\r\n                                    className=\"px-5 py-5 bg-white border-t flex flex-col xs:flex-row items-center xs:justify-between          \">\r\n                                    <span className=\"text-xs xs:text-sm text-gray-900 font-bold\">\r\n                                        Showing {calObj.length} Entries\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default LiveStocks;","import React, { useState, useEffect } from 'react';\nimport LiveStocks from './components/LiveStocks';\n\nfunction App() {\n  const [ws, setWS] = useState(new WebSocket(\"ws://stocks.hulqmedia.com\"));\n  const [stockData, setStockData] = useState([]);\n  useEffect(() => {\n    ws.onopen = () => {\n      // on connecting, do nothing but log it to the console\n      console.log('connected')\n    }\n    ws.onmessage = evt => {\n      // listen to data sent from the websocket server\n      const message = JSON.parse(evt.data)\n      console.log('stocks...',message);\n      setStockData(message);\n    }\n    ws.onclose = () => {\n      console.log('disconnected')\n      // automatically try to reconnect on connection loss\n    }\n  }, [ws.onmessage]);\n\n  return (\n    <div className=\"App\">\n      <LiveStocks data={stockData} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}